/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.42
 * Generated at: 2015-11-18 10:10:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html.piechart;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tld/liferay-portlet.tld", Long.valueOf(1436819868000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fportlet_005fdefineObjects_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fportlet_005fdefineObjects_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fportlet_005fdefineObjects_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      //  portlet:defineObjects
      com.liferay.taglib.portlet.DefineObjectsTag _jspx_th_portlet_005fdefineObjects_005f0 = (com.liferay.taglib.portlet.DefineObjectsTag) _005fjspx_005ftagPool_005fportlet_005fdefineObjects_005fnobody.get(com.liferay.taglib.portlet.DefineObjectsTag.class);
      _jspx_th_portlet_005fdefineObjects_005f0.setPageContext(_jspx_page_context);
      _jspx_th_portlet_005fdefineObjects_005f0.setParent(null);
      int _jspx_eval_portlet_005fdefineObjects_005f0 = _jspx_th_portlet_005fdefineObjects_005f0.doStartTag();
      if (_jspx_th_portlet_005fdefineObjects_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fportlet_005fdefineObjects_005fnobody.reuse(_jspx_th_portlet_005fdefineObjects_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fportlet_005fdefineObjects_005fnobody.reuse(_jspx_th_portlet_005fdefineObjects_005f0);
      javax.portlet.ActionRequest actionRequest = null;
      javax.portlet.ActionResponse actionResponse = null;
      javax.portlet.EventRequest eventRequest = null;
      javax.portlet.EventResponse eventResponse = null;
      com.liferay.portal.kernel.portlet.LiferayPortletRequest liferayPortletRequest = null;
      com.liferay.portal.kernel.portlet.LiferayPortletResponse liferayPortletResponse = null;
      javax.portlet.PortletConfig portletConfig = null;
      java.lang.String portletName = null;
      javax.portlet.PortletPreferences portletPreferences = null;
      java.util.Map portletPreferencesValues = null;
      javax.portlet.PortletSession portletSession = null;
      java.util.Map portletSessionScope = null;
      javax.portlet.RenderRequest renderRequest = null;
      javax.portlet.RenderResponse renderResponse = null;
      javax.portlet.ResourceRequest resourceRequest = null;
      javax.portlet.ResourceResponse resourceResponse = null;
      com.liferay.portal.kernel.util.SearchContainerReference searchContainerReference = null;
      actionRequest = (javax.portlet.ActionRequest) _jspx_page_context.findAttribute("actionRequest");
      actionResponse = (javax.portlet.ActionResponse) _jspx_page_context.findAttribute("actionResponse");
      eventRequest = (javax.portlet.EventRequest) _jspx_page_context.findAttribute("eventRequest");
      eventResponse = (javax.portlet.EventResponse) _jspx_page_context.findAttribute("eventResponse");
      liferayPortletRequest = (com.liferay.portal.kernel.portlet.LiferayPortletRequest) _jspx_page_context.findAttribute("liferayPortletRequest");
      liferayPortletResponse = (com.liferay.portal.kernel.portlet.LiferayPortletResponse) _jspx_page_context.findAttribute("liferayPortletResponse");
      portletConfig = (javax.portlet.PortletConfig) _jspx_page_context.findAttribute("portletConfig");
      portletName = (java.lang.String) _jspx_page_context.findAttribute("portletName");
      portletPreferences = (javax.portlet.PortletPreferences) _jspx_page_context.findAttribute("portletPreferences");
      portletPreferencesValues = (java.util.Map) _jspx_page_context.findAttribute("portletPreferencesValues");
      portletSession = (javax.portlet.PortletSession) _jspx_page_context.findAttribute("portletSession");
      portletSessionScope = (java.util.Map) _jspx_page_context.findAttribute("portletSessionScope");
      renderRequest = (javax.portlet.RenderRequest) _jspx_page_context.findAttribute("renderRequest");
      renderResponse = (javax.portlet.RenderResponse) _jspx_page_context.findAttribute("renderResponse");
      resourceRequest = (javax.portlet.ResourceRequest) _jspx_page_context.findAttribute("resourceRequest");
      resourceResponse = (javax.portlet.ResourceResponse) _jspx_page_context.findAttribute("resourceResponse");
      searchContainerReference = (com.liferay.portal.kernel.util.SearchContainerReference) _jspx_page_context.findAttribute("searchContainerReference");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write(" \n");
      out.write("    <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/application.min.css\" rel=\"stylesheet\" />\n");
      out.write("    <link rel=\"shortcut icon\" href=\"");
      out.print(request.getContextPath());
      out.write("/img/favicon.png\" />\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/jquery/jquery.1.9.0.min.js\"> </script>\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/jquery/jquery-migrate-1.1.0.min.js\"> </script>\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/uniform/js/jquery.uniform.js\"></script>\n");
      out.write("    <!--<script src=\"lib/zepto/zepto.min.js\"> </script>-->\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/bootstrap/bootstrap-tab.js\"> </script>\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/parsley/parsley.js\"> </script>\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <meta name=\"description\" content=\"\" />\n");
      out.write("    <meta name=\"author\" content=\"\" />\n");
      out.write("    <meta charset=\"utf-8\" />\n");
      out.write("    \n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /></head>\n");
      out.write("<body class=\"background-dark\">\n");
      out.write("\n");
      //  portlet:defineObjects
      com.liferay.taglib.portlet.DefineObjectsTag _jspx_th_portlet_005fdefineObjects_005f1 = (com.liferay.taglib.portlet.DefineObjectsTag) _005fjspx_005ftagPool_005fportlet_005fdefineObjects_005fnobody.get(com.liferay.taglib.portlet.DefineObjectsTag.class);
      _jspx_th_portlet_005fdefineObjects_005f1.setPageContext(_jspx_page_context);
      _jspx_th_portlet_005fdefineObjects_005f1.setParent(null);
      int _jspx_eval_portlet_005fdefineObjects_005f1 = _jspx_th_portlet_005fdefineObjects_005f1.doStartTag();
      if (_jspx_th_portlet_005fdefineObjects_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fportlet_005fdefineObjects_005fnobody.reuse(_jspx_th_portlet_005fdefineObjects_005f1);
        return;
      }
      _005fjspx_005ftagPool_005fportlet_005fdefineObjects_005fnobody.reuse(_jspx_th_portlet_005fdefineObjects_005f1);
      actionRequest = (javax.portlet.ActionRequest) _jspx_page_context.findAttribute("actionRequest");
      actionResponse = (javax.portlet.ActionResponse) _jspx_page_context.findAttribute("actionResponse");
      eventRequest = (javax.portlet.EventRequest) _jspx_page_context.findAttribute("eventRequest");
      eventResponse = (javax.portlet.EventResponse) _jspx_page_context.findAttribute("eventResponse");
      liferayPortletRequest = (com.liferay.portal.kernel.portlet.LiferayPortletRequest) _jspx_page_context.findAttribute("liferayPortletRequest");
      liferayPortletResponse = (com.liferay.portal.kernel.portlet.LiferayPortletResponse) _jspx_page_context.findAttribute("liferayPortletResponse");
      portletConfig = (javax.portlet.PortletConfig) _jspx_page_context.findAttribute("portletConfig");
      portletName = (java.lang.String) _jspx_page_context.findAttribute("portletName");
      portletPreferences = (javax.portlet.PortletPreferences) _jspx_page_context.findAttribute("portletPreferences");
      portletPreferencesValues = (java.util.Map) _jspx_page_context.findAttribute("portletPreferencesValues");
      portletSession = (javax.portlet.PortletSession) _jspx_page_context.findAttribute("portletSession");
      portletSessionScope = (java.util.Map) _jspx_page_context.findAttribute("portletSessionScope");
      renderRequest = (javax.portlet.RenderRequest) _jspx_page_context.findAttribute("renderRequest");
      renderResponse = (javax.portlet.RenderResponse) _jspx_page_context.findAttribute("renderResponse");
      resourceRequest = (javax.portlet.ResourceRequest) _jspx_page_context.findAttribute("resourceRequest");
      resourceResponse = (javax.portlet.ResourceResponse) _jspx_page_context.findAttribute("resourceResponse");
      searchContainerReference = (com.liferay.portal.kernel.util.SearchContainerReference) _jspx_page_context.findAttribute("searchContainerReference");
      out.write('\n');

int[] transactions = (int[])renderRequest.getAttribute("transactions");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"RT\" style=\"display:none;\">");
      out.print(transactions[0] );
      out.write("</div>\n");
      out.write("<div id=\"LL\" style=\"display:none;\">");
      out.print(transactions[1] );
      out.write("</div>\n");
      out.write("<div id=\"AD\" style=\"display:none;\">");
      out.print(transactions[2] );
      out.write("</div>\n");
      out.write("<div id=\"HM\" style=\"display:none;\">");
      out.print(transactions[3] );
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("            <div class=\"span3\" style=\"width: 100%;height: 100%;\">\n");
      out.write("                <section class=\"widget large\">\n");
      out.write("                    <header>\n");
      out.write("                        <h4 style=\"text-align: right;\"> تصنيف المعاملات خلال شهر</h4>\n");
      out.write("                    </header>\n");
      out.write("                    <div class=\"body\">\n");
      out.write("                        <div id=\"sources-chart-pie\" class=\"chart pie-chart\">\n");
      out.write("                            <svg></svg>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <footer id=\"data-chart-footer\" class=\"pie-chart-footer\">\n");
      out.write("                    </footer>\n");
      out.write("                </section>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- d3, nvd3-->\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/lib/d3.v2.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/nv.d3.custom.js\"></script>\n");
      out.write("\n");
      out.write("<!-- nvd3 models -->\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/scatter.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/axis.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/legend.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/stackedArea.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/stackedAreaChart.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/line.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/pie.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/pieChartTotal.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/stream_layers.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/lineChart.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/multiBar.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/nvd3/src/models/multiBarChart.js\"></script>\n");
      out.write("\n");
      out.write("<!--backbone and friends -->\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/backbone/underscore-min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- bootstrap default plugins -->\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/bootstrap/bootstrap-transition.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/bootstrap/bootstrap-collapse.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/bootstrap/bootstrap-tooltip.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/bootstrap/bootstrap-popover.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/bootstrap/bootstrap-button.js\"></script>\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/bootstrap/bootstrap-dropdown.js\"></script>\n");
      out.write("\n");
      out.write("<!-- basic application js-->\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/app.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- page specific -->\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/stats.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/template\" id=\"settings-template\">\n");
      out.write("    <div class=\"setting clearfix\">\n");
      out.write("        <div>Background</div>\n");
      out.write("        <div id=\"background-toggle\" class=\"pull-left btn-group\" data-toggle=\"buttons-radio\">\n");
      out.write("            <% dark = background == 'dark'; light = background == 'light';%>\n");
      out.write("            <button type=\"button\" data-value=\"dark\" class=\"btn btn-small btn-transparent <%= dark? 'active' : '' %>\">Dark</button>\n");
      out.write("            <button type=\"button\" data-value=\"light\" class=\"btn btn-small btn-transparent <%= light? 'active' : '' %>\">Light</button>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"setting clearfix\">\n");
      out.write("        <div>Sidebar on the</div>\n");
      out.write("        <div id=\"sidebar-toggle\" class=\"pull-left btn-group\" data-toggle=\"buttons-radio\">\n");
      out.write("            <% onRight = sidebar == 'right'%>\n");
      out.write("            <button type=\"button\" data-value=\"left\" class=\"btn btn-small btn-transparent <%= onRight? '' : 'active' %>\">Left</button>\n");
      out.write("            <button type=\"button\" data-value=\"right\" class=\"btn btn-small btn-transparent <%= onRight? 'active' : '' %>\">Right</button>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"setting clearfix\">\n");
      out.write("        <div>Sidebar</div>\n");
      out.write("        <div id=\"display-sidebar-toggle\" class=\"pull-left btn-group\" data-toggle=\"buttons-radio\">\n");
      out.write("            <% display = displaySidebar%>\n");
      out.write("            <button type=\"button\" data-value=\"true\" class=\"btn btn-small btn-transparent <%= display? 'active' : '' %>\">Show</button>\n");
      out.write("            <button type=\"button\" data-value=\"false\" class=\"btn btn-small btn-transparent <%= display? '' : 'active' %>\">Hide</button>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/template\" id=\"sidebar-settings-template\">\n");
      out.write("        <% auto = sidebarState == 'auto'%>\n");
      out.write("        <% if (auto) {%>\n");
      out.write("            <button type=\"button\"\n");
      out.write("                    data-value=\"icons\"\n");
      out.write("                    class=\"btn-icons btn btn-transparent btn-small\">Icons</button>\n");
      out.write("    <button type=\"button\"\n");
      out.write("            data-value=\"auto\"\n");
      out.write("            class=\"btn-auto btn btn-transparent btn-small\">Auto</button>\n");
      out.write("        <%} else {%>\n");
      out.write("            <button type=\"button\"\n");
      out.write("                    data-value=\"auto\"\n");
      out.write("                    class=\"btn btn-transparent btn-small\">Auto</button>\n");
      out.write("        <% } %>\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
